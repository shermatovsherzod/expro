<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="All" xml:space="preserve">
    <value>Все</value>
  </data>
  <data name="AllExperts" xml:space="preserve">
    <value>Все эксперты</value>
  </data>
  <data name="AnswerN" xml:space="preserve">
    <value>Ответ №</value>
  </data>
  <data name="Answers" xml:space="preserve">
    <value>Ответы</value>
  </data>
  <data name="AnswerText" xml:space="preserve">
    <value>Текст ответа</value>
  </data>
  <data name="AreYouSureToCloseQuestionWithoutFeeDistribution" xml:space="preserve">
    <value>Вы уверены, что хотите закрыть вопрос, не распределив гонорар?</value>
  </data>
  <data name="Articles" xml:space="preserve">
    <value>Статьи</value>
  </data>
  <data name="ArticlesCount" xml:space="preserve">
    <value>Количество статей</value>
  </data>
  <data name="AskQuestion" xml:space="preserve">
    <value>Задать вопрос</value>
  </data>
  <data name="AskQuestionPopover" xml:space="preserve">
    <value>&lt;a href='/Identity/Account/Login?returnUrl=/User/Question'&gt;Войдите&lt;/a&gt; или &lt;a href='/Identity/Account/Register?returnUrl=/User/Question'&gt;зарегистрируйтесь&lt;/a&gt;, чтобы задать вопрос</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Автор</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Назад</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="CloseQuestion" xml:space="preserve">
    <value>Закрыть вопрос</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Комментарии</value>
  </data>
  <data name="CommentText" xml:space="preserve">
    <value>Текст комментария</value>
  </data>
  <data name="Companies" xml:space="preserve">
    <value>Компании</value>
  </data>
  <data name="CompaniesCatalog" xml:space="preserve">
    <value>Каталог компаний</value>
  </data>
  <data name="ConfirmedOnly" xml:space="preserve">
    <value>Только подтвержденные</value>
  </data>
  <data name="DatePublished" xml:space="preserve">
    <value>Дата публикации</value>
  </data>
  <data name="DistributeFee" xml:space="preserve">
    <value>Распределить гонорар</value>
  </data>
  <data name="DoComment" xml:space="preserve">
    <value>Комментировать</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Почта</value>
  </data>
  <data name="Enter" xml:space="preserve">
    <value>Вход</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Ошибка</value>
  </data>
  <data name="ErrorRequiredField" xml:space="preserve">
    <value>Обязательное поле</value>
  </data>
  <data name="Expert" xml:space="preserve">
    <value>Эксперт</value>
  </data>
  <data name="Experts" xml:space="preserve">
    <value>Эксперты</value>
  </data>
  <data name="ExpertsCount" xml:space="preserve">
    <value>Количество экспертов</value>
  </data>
  <data name="Fee" xml:space="preserve">
    <value>Вознаграждение</value>
  </data>
  <data name="FeeIsSuccessfullyDistributed" xml:space="preserve">
    <value>Вознаграждение успешно распределено</value>
  </data>
  <data name="FeePaid" xml:space="preserve">
    <value>Получено вознаграждение</value>
  </data>
  <data name="FileIsAttached" xml:space="preserve">
    <value>Есть вложенный файл</value>
  </data>
  <data name="FilterByLawArea" xml:space="preserve">
    <value>Фильтр по направлению</value>
  </data>
  <data name="FilterByPrice" xml:space="preserve">
    <value>Фильтр по цене</value>
  </data>
  <data name="fr" xml:space="preserve">
    <value>Узбекский</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Имя</value>
  </data>
  <data name="HomePage" xml:space="preserve">
    <value>Главная</value>
  </data>
  <data name="ItMustBe100PercentInTotal" xml:space="preserve">
    <value>Суммарно должно быть 100%</value>
  </data>
  <data name="NoAnswers" xml:space="preserve">
    <value>Ответов нет</value>
  </data>
  <data name="PracticeDocuments" xml:space="preserve">
    <value>Практические документы</value>
  </data>
  <data name="QuestionClosed" xml:space="preserve">
    <value>Вопрос закрыт</value>
  </data>
  <data name="QuestionDetails" xml:space="preserve">
    <value>Вопрос - детали</value>
  </data>
  <data name="QuestionHasNoFee" xml:space="preserve">
    <value>Вопрос не имеет вознаграждение</value>
  </data>
  <data name="QuestionNotFound" xml:space="preserve">
    <value>Вопрос не найден</value>
  </data>
  <data name="Questions" xml:space="preserve">
    <value>Вопросы</value>
  </data>
  <data name="Questions?" xml:space="preserve">
    <value>Есть вопросы?</value>
  </data>
  <data name="QuestionsCount" xml:space="preserve">
    <value>Количество вопросов</value>
  </data>
  <data name="QuestionSolved" xml:space="preserve">
    <value>Вопрос решен</value>
  </data>
  <data name="RandomGUID" xml:space="preserve">
    <value>RandomGUID это {0}</value>
  </data>
  <data name="Resume" xml:space="preserve">
    <value>Резюме</value>
  </data>
  <data name="ResumeCatalog" xml:space="preserve">
    <value>Каталог резюме</value>
  </data>
  <data name="ru" xml:space="preserve">
    <value>Русский</value>
  </data>
  <data name="SampleDocuments" xml:space="preserve">
    <value>Образцовые документы</value>
  </data>
  <data name="SampleDocumentsCount" xml:space="preserve">
    <value>Количество образцовых документов</value>
  </data>
  <data name="SeeAll" xml:space="preserve">
    <value>Открыть все</value>
  </data>
  <data name="SelectAtLeastOneAnswer" xml:space="preserve">
    <value>Выберите хотя бы один ответ</value>
  </data>
  <data name="SelectFile" xml:space="preserve">
    <value>Выберите файл</value>
  </data>
  <data name="Share" xml:space="preserve">
    <value>Поделиться</value>
  </data>
  <data name="SomethingIsWrongWithSelectedAnswers" xml:space="preserve">
    <value>Что-то не так с выбранными ответами</value>
  </data>
  <data name="soum" xml:space="preserve">
    <value>сум</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Отправить</value>
  </data>
  <data name="TopExperts" xml:space="preserve">
    <value>ТОП эксперты</value>
  </data>
  <data name="UnauthorizedDislikePopover" xml:space="preserve">
    <value>&lt;a href='/Identity/Account/Login?returnUrl={0}'&gt;Войдите&lt;/a&gt;, чтобы дислайкнуть</value>
  </data>
  <data name="UnauthorizedLikePopover" xml:space="preserve">
    <value>&lt;a href='/Identity/Account/Login?returnUrl={0}'&gt;Войдите&lt;/a&gt;, чтобы лайкнуть</value>
  </data>
  <data name="UserNotFound" xml:space="preserve">
    <value>Пользователь не найден</value>
  </data>
  <data name="Usuals" xml:space="preserve">
    <value>Обычные</value>
  </data>
  <data name="Vacancies" xml:space="preserve">
    <value>Вакансии</value>
  </data>
  <data name="VacanciesCatalog" xml:space="preserve">
    <value>Каталог вакансий</value>
  </data>
  <data name="ViewAllFilters" xml:space="preserve">
    <value>Показать все фильтры</value>
  </data>
  <data name="WarningNotEnoughPointToGiveAnswerForQuestionWithFee" xml:space="preserve">
    <value>Чтобы ответить на вопрос с вознаграждением, требуется набрать 100 баллов и подтвердить образование (диплом). Подробнее читайте &lt;a href="#"&gt;условия оказания платных услуг&lt;/a&gt;</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Добро пожаловать</value>
  </data>
  <data name="WithFee" xml:space="preserve">
    <value>С вознаграждением</value>
  </data>
  <data name="WriteAnswer" xml:space="preserve">
    <value>Написать ответ</value>
  </data>
</root>