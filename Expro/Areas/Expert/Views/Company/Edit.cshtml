@model CompanyEditVM
@using Expro.ViewModels
@using Expro.Common
@using Expro.Models.Enums

@{
    ViewData["Title"] = "Редактирование компании";
    int? cityID = Model?.CityID;
    var lawAreasWithParent = ViewData["lawAreas"] as List<SelectListItemWithParent>;
    int selectedLawArea = Model?.LawAreaParentID ?? 0;
}

<form asp-controller="Company" asp-action="Edit"
      id="editCompanyForm"
      onsubmit="SubmitCompanyForm()"
      data-ajax="true"
      data-ajax-method="POST"
      data-ajax-failure="PostFailure"
      data-ajax-success="PostSuccess"
      data-ajax-complete="PostCompleted">

    <div class="border-bottom mb-4">
        <h2>@ViewData["Title"]</h2>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    </div>
    <input asp-for="StatusID" type="hidden" />

    @*@if (ViewData["successfullySaved"] != null)
    {
        <div class="alert alert-soft-success text-center rounded-0 mb-0" role="alert">
            Данные успешно сохранены
        </div>
        <br />
    }*@
    @if (Model.StatusID == (int)DocumentStatusesEnum.WaitingForApproval)
    {
        <div class="alert alert-soft-info text-center rounded-0 mb-0" role="alert">
            Отправлена на подтверждение
        </div>
    }
    else if (Model.StatusID == (int)DocumentStatusesEnum.Approved)
    {
        <div class="alert alert-soft-success text-center rounded-0 mb-0" role="alert">
            Подтверждена администратором
        </div>
    }
    else if (Model.StatusID == (int)DocumentStatusesEnum.Rejected)
    {
        <div class="alert alert-soft-danger text-center rounded-0 mb-0" role="alert">
            Отклонена администратором
        </div>
    }

    <!-- Form Group -->
    <div class="row form-group">
        <label class="col-sm-3 col-form-label input-label">Лого</label>
        <div class="col-sm-9">
            <div class="d-flex align-items-center">
                <!-- Avatar -->
                <label class="avatar avatar-xl avatar-circle mr-4" for="editCompanyFormAttachment">
                    @{
                        string logoUrl = "/lib/frontTheme/img/160x160/img38.jpg";
                        if (Model.Logo != null && Model.Logo.ID > 0)
                        {
                            logoUrl = Model.Logo.Url;
                        }
                    }
                    <img id="avatarImg" class="avatar-img" src="@logoUrl" alt="Image Description">
                </label>
                <div class="btn btn-sm btn-primary file-attachment-btn">
                    Загрузить лого
                    <input type="file" class="js-file-attach file-attachment-btn-label" id="editCompanyFormAttachment"  accept="image/*"
                           data-hs-file-attach-options='{
                              "textTarget": "#avatarImg",
                              "mode": "image",
                              "targetAttr": "src",
                              "resetTarget": ".js-file-attach-reset-img",
                              "resetImg": "/lib/frontTheme/img/160x160/img38.jpg",
                              "allowTypes": [".png", ".jpeg", ".jpg"]
                           }'>
                </div>
                <!-- End Avatar -->
                @*<button type="button" class="js-file-attach-reset-img btn btn-sm btn-white ml-2">Удалить</button>*@
            </div>
        </div>
    </div>
    <!-- End Form Group -->

    <div class="row">
        <div class="col-md-3">
            <label asp-for="@Model.CompanyName"></label>
        </div>
        <div class="col-md-9">
            <p>
                <input asp-for="@Model.CompanyName" class="form-control" />
                <span asp-validation-for="@Model.CompanyName" class="text-danger"></span>
            </p>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3">
            <label asp-for="@Model.CompanyDescription"></label>
        </div>
        <div class="col-md-9">
            <!-- Quill -->
            <div class="quill-custom Text">
                <div class="js-quill" style="min-height: 15rem;"
                     data-hs-quill-options='{
                   "placeholder": "@localizer["TypeTextBrieflyHere"]",
                    "modules": {
                      "toolbar": [["bold", "italic", "underline", "strike", "link", "image", "blockquote", "code", {"list": "bullet"}]]
                    }
                   }'>
                    @Html.Raw(Model.CompanyDescription)
                </div>
            </div>
            <br />
            <!-- End Quill -->
            <textarea asp-for="CompanyDescription" class="form-control" style="display: none;"></textarea>
            <span asp-validation-for="CompanyDescription" class="text-danger"></span>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3">
            <label asp-for="@Model.LawAreaParentID"></label>
        </div>
        <div class="col-md-9">
            <select asp-for="LawAreaParentID"
                    class="js-custom-select custom-select" size="1" style="opacity: 0;"
                    data-hs-select2-options='{
                    "minimumResultsForSearch": "Infinity"
                }'>
                @{
                    var parentItems = lawAreasWithParent.Where(m => m.ParentValue == "").ToList();

                    <option value=""></option>
                    for (int i = 0; i < parentItems.Count; i++)
                    {
                        <option value="@parentItems[i].Value">@parentItems[i].Text</option>
                    }
                }
            </select>
            <span asp-validation-for="@Model.LawAreaParentID" class="text-danger"></span>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3">
            @*<label asp-for="@Model.LawAreas"></label>*@
        </div>
        <div class="col-md-9">
            <select asp-for="LawAreas"
                    class="js-custom-select custom-select" size="1" multiple style="opacity: 0;"
                    data-hs-select2-options='{
                    "minimumResultsForSearch": "Infinity"
                }'>
            </select>
            <span asp-validation-for="@Model.LawAreas" class="text-danger"></span>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3">
            <label asp-for="@Model.RegionID"></label>
        </div>
        <div class="col-md-9">
            <select asp-for="@Model.RegionID"
                    asp-items="@ViewData["regions"] as IEnumerable<SelectListItem>"
                    class="js-custom-select custom-select" size="1" style="opacity: 0;"
                    data-hs-select2-options='{
                      "minimumResultsForSearch": "Infinity"
                    }'>
                <option disabled selected>--- Выбрать регион ---</option>
            </select>
            <span asp-validation-for="@Model.RegionID" class="text-danger"></span>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3">
            <label asp-for="@Model.CityID"></label>
        </div>
        <div class="col-md-9">
            <select asp-for="@Model.CityID"
                    asp-items="@ViewData["cities"] as IEnumerable<SelectListItem>"
                    class="js-custom-select custom-select" size="1" style="opacity: 0;"
                    data-hs-select2-options='{
                    "minimumResultsForSearch": "Infinity"
                }'>
                <option disabled selected>--- Выбрать город ---</option>
            </select>
            <span asp-validation-for="@Model.CityID" class="text-danger"></span>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3">
            <label asp-for="@Model.CityOther"></label>
        </div>
        <div class="col-md-9">
            <p>
                <input asp-for="@Model.CityOther" class="form-control" />
                <span asp-validation-for="@Model.CityOther" class="text-danger"></span>
            </p>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3">
            <label asp-for="@Model.WebSite"></label>
        </div>
        <div class="col-md-9">
            <p>
                <input asp-for="@Model.WebSite" class="form-control" />
                <span asp-validation-for="@Model.WebSite" class="text-danger"></span>
            </p>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3">
            <label asp-for="@Model.PhoneNumber"></label>
        </div>
        <div class="col-md-9">
            <p>
                <input asp-for="@Model.PhoneNumber" class="form-control" />
                <span asp-validation-for="@Model.PhoneNumber" class="text-danger"></span>
            </p>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3">
            <label asp-for="@Model.Email"></label>
        </div>
        <div class="col-md-9">
            <p>
                <input asp-for="@Model.Email" class="form-control" />
                <span asp-validation-for="@Model.Email" class="text-danger"></span>
            </p>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3">
            <label asp-for="@Model.Address"></label>
        </div>
        <div class="col-md-9">
            <p>
                <input asp-for="@Model.Address" class="form-control" />
                <span asp-validation-for="@Model.Address" class="text-danger"></span>
            </p>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <div class="form-group" id="actionButtonsBox">
                <input asp-for="ActionType" type="hidden" />
                <button type="submit" class="btn btn-info" actiontype="@DocumentActionTypesEnum.saveAsDraft">Сохранить как черновик</button>
                <button type="submit" class="btn btn-indigo" actiontype="@DocumentActionTypesEnum.submitForApproval">Отправить на подтверждение</button>
                <div class="spinner-border spinner" style="display: none;"></div>
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-action="Index">Вернутся к списку</a>
</div>

@section CustomFrontStyles
{
    <link rel="stylesheet" href="~/lib/frontTheme/vendor/select2/dist/css/select2.min.css">
    <link rel="stylesheet" href="~/lib/frontTheme/vendor/quill/dist/quill.snow.css">
}

@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script src="~/lib/frontTheme/vendor/select2/dist/js/select2.full.min.js"></script>
    <script src="~/lib/frontTheme/vendor/hs-file-attach/dist/hs-file-attach.min.js"></script>
    <script src="~/lib/frontTheme/vendor/quill/dist/quill.min.js"></script>
    <script src="~/js/LawAreaPickersBinder.js"></script>

    <script>
        var lawAreasWithParent = @Html.Raw(Json.Serialize(lawAreasWithParent));
        var selectedParentLawArea = @selectedLawArea;
        var selectedChildLawAreas = @Html.Raw(Json.Serialize(Model?.LawAreas ?? null));

        $(document).ready(function () {
            BindLawAreaPickers(
                "select#LawAreaParentID",
                "select#LawAreas",
                lawAreasWithParent,
                selectedParentLawArea,
                selectedChildLawAreas);
        });
    </script>

    <script>
        $(document).ready(function ()
        {
            InitFileUploader();
            InitSelectpicker();
            var quill = InitQuill();

            var statusID = @Model.StatusID;
            console.log(statusID);
            if (statusID == @((int)CompanyStatusEnum.WaitingForApproval)
                || statusID == @((int)CompanyStatusEnum.Approved)
                || statusID == @((int)CompanyStatusEnum.Rejected))
            {
                $("form input, form select, form textarea").attr("disabled", "disabled");
                $("form #editCompanyFormAttachment").attr("disabled", "disabled");
                $('select').prop('disabled', true);
                $("#actionButtonsBox").html("");
                quill.disable();
            }

            var cityID = Number("@cityID");
            if (cityID != "0")
                $("#CityOther").attr('disabled', 'disabled');

            $('#RegionID').change(function () {
                var selectedRegion = $("#RegionID").val();
                LoadCitiesByRegion(selectedRegion);
            });

            $('#CityID').change(function () {
                var selectedCity = $("#CityID").val();
                $("#CityOther").val('');
                if (selectedCity === "0") {
                    $("#CityOther").removeAttr('disabled');
                }
                else {
                    $("#CityOther").attr('disabled', 'disabled');
                }
            });

            LoadCitiesByRegion($("#RegionID").val(), cityID);

            $("form button[type=submit]").click(function (ev) {
                $("form input#ActionType").val($(this).attr("actiontype"));
            });
        });

        function LoadCitiesByRegion(regionID, selectedCityID) {
            if (selectedCityID == undefined || (isNaN(selectedCityID)))
                selectedCityID = null;

            $.ajax({
                type: "GET",
                url: "/City/GetByRegionIDAsSelectList",
                data: {
                    regionID: regionID,
                    selected: selectedCityID
                },
                contentType: "application/json; charset=utf-8",
                //dataType: "json",
                success: function (data) {
                    $("#CityID").empty().append($("<option>").text("--- Выбрать город ---").attr('disabled', 'disabled').attr('selected', 'selected'));
                    $.each(data,
                        function (i, item) {
                            var isSelected = "";
                            if (item.selected == true)
                                isSelected = "selected='selected'";

                            $("#CityID")
                                .append("<option value='" + item.value + "' " + isSelected + ">" + item.text + "</option>");

                        });
                },
                error: function (data) {
                    console.log(data);
                }
            });
        }
    </script>

    <script>
        function InitFileUploader() {
            // INITIALIZATION OF CUSTOM FILE
            // =======================================================
            $('.js-file-attach').each(function () {
                var customFile = new HSFileAttach($(this)).init();
            });
        }

        function InitSelectpicker() {
            //$('#LawAreas').selectpicker();

            // INITIALIZATION OF SELECT2
            // =======================================================
            $('.js-custom-select').each(function () {
                var select2 = $.HSCore.components.HSSelect2.init($(this));
            });
        }

        function InitQuill() {
            // INITIALIZATION OF QUILLJS EDITOR
            // =======================================================
            var options = {
                //debug: 'info',
                //modules: {
                //    toolbar: '#toolbar'
                //},
                //placeholder: 'Compose an epic...',
                //readOnly: true,
                //theme: 'snow'
            };
            var quill = $.HSCore.components.HSQuill.init('.js-quill', options);
            quill.on('text-change', function (delta, oldDelta, source) {
                //if (source == 'api') {
                //    alert("An API call triggered this change.");
                //} else if (source == 'user') {
                //    alert("A user action triggered this change.");
                //}

                var html = $(".quill-custom.Text .ql-editor").html();
                if (html == "<p><br></p>")
                    html = "";

                $("textarea#CompanyDescription").val(html);
            });

            return quill;
        }

        var fileInput;
        var companyID = @Model.ID;

        function SubmitCompanyForm() {
            var isValid = $('#editCompanyForm').valid();
            if (isValid) {
                $("#editCompanyForm .spinner").show();

                DisableFormElements();

                return true;
            }
            else
                return false;
        }

        function ShowAnswerFormSpinner() {

        }

        function DisableFormElements() {
            $("#editCompanyForm input").attr("readonly", "readonly");
            $("#editCompanyForm textarea").attr("readonly", "readonly");
            $("#editCompanyForm button").attr("disabled", "disabled");
        }

        function PostFailure(data) {
            alert("Ошибка: " + data.responseJSON.errorMessage);
            //console.log(data);
            $("#editCompanyForm .spinner").hide();
        }

        function PostSuccess(data) {
            //alert("success");
            //console.log(data);
            //companyID = data.id;
            //alert("success");

            fileInput = document.getElementById('editCompanyFormAttachment')
            //fileInput = $("#editCompanyForm input#attachment");
            //console.log(fileInput);
            if (!(fileInput.files && fileInput.files[0])) {
                //$("#" + spinnerTagID).hide();
                //alert("no file is selected");
                RedirectToIndexPageAfterSuccessCreate()
            }
            else {
                var file = fileInput.files[0];
                UploadToFirebaseStorageCompanyLogo(file);
            }
        }

        function PostCompleted(data) {
            //alert("completed");
            //console.log(data);
            //alert("completed");
            //$("#editCompanyForm .spinner").hide();
        }

        function UploadToFirebaseStorageCompanyLogo(file) {
            var displayName = file.name;
            var tmp = displayName.split('.');
            var extension = tmp[tmp.length - 1];

            // Create a root reference
            var storageRef = firebase.storage().ref();
            var uploadTask = storageRef.child('Companies/' + companyID + '.' + extension).put(file);

            // Listen for state changes, errors, and completion of the upload.
            uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'
                function (snapshot)
                {
                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded
                    var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
                    console.log('Upload is ' + progress + '% done');
                    switch (snapshot.state)
                    {
                        case firebase.storage.TaskState.PAUSED: // or 'paused'
                            console.log('Upload is paused');
                            break;
                        case firebase.storage.TaskState.RUNNING: // or 'running'
                            console.log('Upload is running');
                            break;
                    }
                }, function (error)
                {
                    $("#editCompanyForm .spinner").hide();
                    console.log(error);
                }, function ()
                {
                    // Upload completed successfully, now we can get the download URL
                    var attachment = {
                        FileName: "" + companyID,
                        DisplayName: displayName,
                        Extension: extension,
                        Path: "",
                        Size: 0,
                        ContentType: "",
                        DownloadUrl: "",
                        FileType: "@Constants.FileTypes.COMPANY",
                        ModelID: companyID
                    };
                    //console.log(uploadTask.snapshot.ref);


                    uploadTask.snapshot.ref.getMetadata().then(function (metaData)
                    {
                        //console.log(metaData);

                        //attachment.Filename = metaData.name;
                        attachment.Path = metaData.fullPath;
                        attachment.Size = metaData.size;
                        attachment.ContentType = metaData.contentType;

                        uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL)
                        {
                            attachment.DownloadUrl = downloadURL;

                            //console.log(attachment);
                            FileAjaxUpload(fileInput, file, attachment);
                        });
                    });
                }
            );
        }

        function FileAjaxUpload(input, file, attachment) {
            if (file) {
                $.ajax({
                    url: "/Attachment/Save",
                    data: JSON.stringify(attachment),
                    processData: false,
                    contentType: "application/json; charset=utf-8",
                    type: "POST",
                    //dataType: "json",
                    beforeSend: function () {
                        //alert("beforeSend");
                        //$("#" + spinnerTagID).show();
                        //$("#imgInp").attr("disabled", "disabled");
                        $(input).attr("disabled", "disabled");
                    },
                    success: function (data) {
                        RedirectToIndexPageAfterSuccessCreate();
                        //alert("File uploaded!");
                    },
                    error: function (data) {
                        alert("Error!");
                        $("#editCompanyForm .spinner").hide();
                    },
                    complete: function () {
                        //$("#" + spinnerTagID).hide();
                        //$(input).removeAttr("disabled");
                    }
                });
            }
            else {
                //$("#" + spinnerTagID).hide();
                $("#editCompanyForm .spinner").hide();
                $(input).removeAttr("disabled");
            }
        }

        function RedirectToIndexPageAfterSuccessCreate() {
            window.location.replace("/Expert/Company/Edit/" + companyID + "?successfullySaved=true");
        }
    </script>
}
