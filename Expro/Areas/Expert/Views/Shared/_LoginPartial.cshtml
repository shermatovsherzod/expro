@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        @{
            var userType = User.Claims.FirstOrDefault(c => c.Type == "UserType");
            if (userType != null)
            {
                if (int.Parse(userType.Value) == 1)
                {
                    <a href="/Admin/Profile" class="nav-link text-dark" title="Manage">Hello @User.Identity.Name!</a>
                }
                else if (int.Parse(userType.Value) == 2)
                {
                    <a href="/Expert/ExpertProfileMainInfo" class="nav-link text-dark" title="Manage">Hello @User.Identity.Name!</a>
                }
                else if (int.Parse(userType.Value) == 3)
                {
                    <a href="/User/Profile" class="nav-link text-dark" title="Manage">Hello @User.Identity.Name!</a>
                }
            }
        }
   
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
