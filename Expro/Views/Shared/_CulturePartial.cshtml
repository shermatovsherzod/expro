@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options
@*@inject IViewLocalizer<Expro.Resources.ResourceTexts> Localizer*@
@using Microsoft.Extensions.Localization;
@inject IStringLocalizer<Expro.Resources.ResourceTexts> localizer
@inject IOptions<RequestLocalizationOptions> LocOptions
@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = localizer.GetString(c.Name) })
        .ToList();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}{Context.Request.QueryString}";
}
<div title="@localizer["Request culture provider:"] @requestCulture?.Provider?.GetType().Name">
    <form action="/Language/SetCulture?returnUrl=@returnUrl" id="selectLanguage"
          
          
          method="post"
          class="form-horizontal nav-link text-dark"
          role="form">
        <select name="culture"
                onchange="this.form.submit();"
                asp-for="@requestCulture.RequestCulture.UICulture.Name"
                asp-items="cultureItems">
        </select>
    </form>
</div>