@model Expro.ViewModels.QuestionDetailsForSiteVM
@using Expro.Models.Enums
@using Expro.Common

@{
    ViewData["Title"] = "Вопрос - детали";
    //ViewData["DocumentType"] = DocumentTypesEnum.QuestionDocument;
}

<h1>@ViewData["Title"]</h1>
<hr />

<div>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Author)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Author.FullName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DatePublished)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DatePublished)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LawAreas)
        </dt>
        <dd class="col-sm-10">
            @foreach (var lawArea in Model.LawAreas)
            {
                <span class="badge badge-primary">@lawArea.Name</span>
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Text)
        </dt>
        <dd class="col-sm-10">
            @Html.Raw(Model.Text)
        </dd>
        @if (Model.Attachment != null && Model.Attachment.ID > 0)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Attachment)
            </dt>
            <dd class="col-sm-10">
                <a href="@Model.Attachment.Url">@Model.Attachment.DisplayName</a>
            </dd>
        }

        @if (Model.PriceType == DocumentPriceTypesEnum.Paid)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.PriceStr)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.PriceStr) сум
            </dd>
        }
    </dl>
</div>

<hr />
<h3>Ответы и комментарии</h3>
<div class="row" id="comments">
    @if (Model.Comments.Count > 0)
    {
        foreach (var comment in Model.Comments)
        {
            <div class="col-12">
                <div class="card" style="margin-bottom: 20px;">
                    <div class="card-header">@comment.Author.FullName @comment.DatePublished</div>
                    <div class="card-body">
                        <p>@comment.Text</p>
                        @if (comment.Attachment.ID > 0)
                        {
                            <p><a href="@comment.Attachment.Url">@comment.Attachment.DisplayName</a></p>
                        }
                    </div>
                    <div class="card-footer">
                        <p>Лайки: @comment.PositiveLikesCount, Дислайки: @comment.NegativeLikesCount</p>
                    </div>
                </div>
            </div>
        }

    }
    else
    {
        <p>Пока ничего нет</p>
    }
</div>

@{
    //ViewData["targetContainerID"] = "comments";
    ViewData["objectID"] = Model.ID;
    ViewData["commentType"] = Constants.CommentTypes.DOCUMENT;

    await Html.RenderPartialAsync("_CommentCreateFormPartial", new Expro.ViewModels.CommentCreateVM());
}

<div>
    <a asp-action="Index">Назад</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
@*<script>
    $(document).ready(function () {

    });
</script>*@
}